package com.owner.process.usecases.sales_order.shipment_history;

import com.owner.process.persistence.models.ItemQty;
import com.owner.process.persistence.models.ItemQtyPrice;
import com.owner.process.persistence.models.SalesSummaryWithTax;
import com.owner.process.persistence.models.ShipHis;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;

import javax.transaction.Transactional;
import java.util.List;

@Repository
public interface ShipHisRepository extends JpaRepository<ShipHis,Long> {
	List<ShipHis> findByDoNoAndDoLineNo(String pk0, String pk1);
	ShipHis findByDoNo(String pk0);
	ShipHis findByDoNoAndItem(String pk0,String pk1);
	ShipHis findByDoNoAndDoLineNoAndItem(String pk0,String pk1,String pk2);

	@Query(value="select * from ##plant##shiphis " +
			"where doNo = :pk0 and dolNo = :pk1 and (status = :pk2 or status = :pk3) " +
			"order by STATUS ",nativeQuery = true)
    List<ShipHis> findByDoNoAndDoLineNoOrderByStatus(String pk0, String pk1,String pk2,String pk3);

	@Transactional
	ShipHis deleteByDoNoAndDoLineNo(String pk0, Integer pk1);

	@Transactional
	Long deleteByBeanId(Integer pk0);

	@Query(value="SELECT ITEM AS item,SUM(PICKQTY) AS qty FROM " +
			"##plant##SHIPHIS WHERE CONVERT(DATETIME, ISSUEDATE, 104) between  CONVERT(DATETIME, :pk0, 104) " +
			"and  CONVERT(DATETIME, :pk1, 104) GROUP BY ITEM",nativeQuery = true)
	List<ItemQty> findByItemQty(String pk0, String pk1);

	@Query(value="SELECT ITEM AS item,SUM(PICKQTY) AS qty,SUM(PICKQTY*UNITPRICE) AS unitPrice FROM " +
			"##plant##SHIPHIS WHERE CONVERT(DATETIME, ISSUEDATE, 104) between  CONVERT(DATETIME, :pk0, 104) " +
			"and  CONVERT(DATETIME, :pk1, 104) and ISNULL(TRAN_TYPE,'') != 'KITTING' and " +
			"ISNULL(TRAN_TYPE,'') != 'DE-KITTING' and ISNULL(CNAME,'') != '' " +
			"GROUP BY ITEM",nativeQuery = true)
	List<ItemQtyPrice> findByItemQtyWithOutKitAndDkit(String pk0, String pk1);

	@Query(value="SELECT ITEM AS item,SUM(PICKQTY) AS qty FROM " +
			"##plant##SHIPHIS WHERE CONVERT(DATETIME, ISSUEDATE, 104) < CONVERT(DATETIME, :pk0, 104) " +
			"GROUP BY ITEM",nativeQuery = true)
	List<ItemQty> findByItemQtyToDate(String pk0);

	@Query(value="SELECT ITEM AS item,SUM(PICKQTY) AS qty FROM " +
			"##plant##SHIPHIS WHERE CONVERT(DATETIME, ISSUEDATE, 104) > CONVERT(DATETIME, :pk0, 104) " +
			"GROUP BY ITEM",nativeQuery = true)
	List<ItemQty> findByItemQtyFromDate(String pk0);

	@Query(value="SELECT ITEM AS item,SUM(PICKQTY) AS qty,SUM(PICKQTY*UNITPRICE) AS unitPrice FROM " +
			"##plant##SHIPHIS WHERE CONVERT(DATETIME, ISSUEDATE, 104) between  CONVERT(DATETIME, :pk0, 104) " +
			"and  CONVERT(DATETIME, :pk1, 104)  AND CNAME LIKE %:pk2% GROUP BY ITEM",nativeQuery = true)
	List<ItemQtyPrice> findByItemQtyByCustId(String pk0, String pk1, String pk2);


	@Query(value="SELECT ISNULL(SUM(B.TOTAL_PRICE),0) AS TOTAL_SALES_PRICE FROM \n" +
			"( SELECT A.CUSTOMERNAME,A.ITEM,A.ITEMDESC,SUM(A.QTY) AS QTY,SUM(A.TOTAL_PRICE) AS \n" +
			"PRICE,SUM(A.TAX) AS TAX_AMOUNT, (SUM(A.TOTAL_PRICE)+SUM(A.TAX)) AS TOTAL_PRICE FROM \n" +
			"(SELECT S.ITEM,S.ITEMDESC,SUM(S.PICKQTY) AS QTY \n" +
			",SUM(ISNULL(S.PICKQTY,0)*ISNULL(S.UNITPRICE,0)) AS TOTAL_PRICE,S.CNAME AS CUSTOMERNAME,((SUM(\n" +
			"ISNULL(S.PICKQTY,0)*ISNULL(S.UNITPRICE,0))/100)*(CASE WHEN ISNULL(DONO,'') = '' THEN (CASE WHEN \n" +
			"(SELECT COUNT(PLANT) FROM ##plant##FININVOICEHDR AS I WHERE I.GINO = S.INVOICENO) > 0 THEN\n" +
			"(CASE WHEN (SELECT ISNULL(T.ISZERO,1) FROM FINCOUNTRYTAXTYPE AS T WHERE T.ID IN (SELECT TOP 1 ISNULL(I.TAXID,0)  FROM \n" +
			"##plant##FININVOICEHDR AS I WHERE I.GINO = S.INVOICENO)) > 0 THEN 0 ELSE (SELECT TOP 1 ISNULL(I.OUTBOUD_GST,0) FROM \n" +
			"##plant##FININVOICEHDR AS I WHERE I.GINO = S.INVOICENO) END) ELSE 0 END) ELSE (CASE WHEN\n" +
			"(SELECT ISNULL(D.TAXID,0) FROM ##plant##DOHDR AS D WHERE D.DONO=S.DONO) > 0 THEN\n" +
			"(CASE WHEN (SELECT ISNULL(T.ISZERO,1) FROM FINCOUNTRYTAXTYPE AS T WHERE T.ID IN (SELECT ISNULL(D.TAXID,0) \n" +
			"FROM ##plant##DOHDR AS D WHERE D.DONO=S.DONO)) > 0 THEN 0 ELSE (SELECT TOP 1 ISNULL(D.OUTBOUND_GST,0) FROM \n" +
			"##plant##DOHDR AS D WHERE D.DONO=S.DONO) END) ELSE 0 END) END)) AS TAX FROM ##plant##SHIPHIS AS S WHERE \n" +
			"CONVERT(DATETIME,S.ISSUEDATE, 104) between  CONVERT(DATETIME, :pk0, 104) and  CONVERT(DATETIME, :pk1, 104)\n" +
			"GROUP BY S.ITEM,S.ITEMDESC,S.DONO,S.INVOICENO,S.CNAME) AS A  \n" +
			"WHERE ISNULL(A.CUSTOMERNAME,'') != '' GROUP BY A.ITEM,A.ITEMDESC,A.CUSTOMERNAME) AS B",nativeQuery = true)
	String getTotalSaleswithtax(String pk0, String pk1);

	@Query(value="SELECT ISNULL(SUM(B.TOTAL_PRICE),0) AS TOTAL_SALES_PRICE FROM \n" +
			"( SELECT A.CUSTOMERNAME,A.ITEM,A.ITEMDESC,SUM(A.QTY) AS QTY,SUM(A.TOTAL_PRICE) AS \n" +
			"PRICE,SUM(A.TAX) AS TAX_AMOUNT, (SUM(A.TOTAL_PRICE)+SUM(A.TAX)) AS TOTAL_PRICE FROM \n" +
			"(SELECT S.ITEM,S.ITEMDESC,SUM(S.PICKQTY) AS QTY \n" +
			",SUM(ISNULL(S.PICKQTY,0)*ISNULL(S.UNITPRICE,0)) AS TOTAL_PRICE,S.CNAME AS CUSTOMERNAME,((SUM(\n" +
			"ISNULL(S.PICKQTY,0)*ISNULL(S.UNITPRICE,0))/100)*(CASE WHEN ISNULL(DONO,'') = '' THEN (CASE WHEN \n" +
			"(SELECT COUNT(PLANT) FROM ##plant##FININVOICEHDR AS I WHERE I.GINO = S.INVOICENO) > 0 THEN\n" +
			"(CASE WHEN (SELECT ISNULL(T.ISZERO,1) FROM FINCOUNTRYTAXTYPE AS T WHERE T.ID IN (SELECT TOP 1 ISNULL(I.TAXID,0)  FROM \n" +
			"##plant##FININVOICEHDR AS I WHERE I.GINO = S.INVOICENO)) > 0 THEN 0 ELSE (SELECT TOP 1 ISNULL(I.OUTBOUD_GST,0) FROM \n" +
			"##plant##FININVOICEHDR AS I WHERE I.GINO = S.INVOICENO) END) ELSE 0 END) ELSE (CASE WHEN\n" +
			"(SELECT ISNULL(D.TAXID,0) FROM ##plant##DOHDR AS D WHERE D.DONO=S.DONO) > 0 THEN\n" +
			"(CASE WHEN (SELECT ISNULL(T.ISZERO,1) FROM FINCOUNTRYTAXTYPE AS T WHERE T.ID IN (SELECT ISNULL(D.TAXID,0) \n" +
			"FROM ##plant##DOHDR AS D WHERE D.DONO=S.DONO)) > 0 THEN 0 ELSE (SELECT TOP 1 ISNULL(D.OUTBOUND_GST,0) FROM \n" +
			"##plant##DOHDR AS D WHERE D.DONO=S.DONO) END) ELSE 0 END) END)) AS TAX FROM ##plant##SHIPHIS AS S WHERE \n" +
			"CONVERT(DATETIME,S.ISSUEDATE, 104) between  CONVERT(DATETIME, :pk0, 104) and  CONVERT(DATETIME, :pk1, 104)\n" +
			"GROUP BY S.ITEM,S.ITEMDESC,S.DONO,S.INVOICENO,S.CNAME) AS A  \n" +
			"WHERE ISNULL(A.CUSTOMERNAME,'') != '' AND ISNULL(A.CUSTOMERNAME,'') = :pk2 GROUP BY A.ITEM,A.ITEMDESC,A.CUSTOMERNAME) AS B",nativeQuery = true)
	String getTotalCustSalesWithTax(String pk0, String pk1, String pk2);

	@Query(value="SELECT A.CUSTOMERNAME,A.ITEM,A.ITEMDESC,SUM(A.QTY) AS QTY,SUM(A.TOTAL_PRICE) AS \n" +
			"PRICE,SUM(A.TAX) AS TAX_AMOUNT, (SUM(A.TOTAL_PRICE)+SUM(A.TAX)) AS TOTAL_PRICE FROM \n" +
			"(SELECT S.ITEM,S.ITEMDESC,SUM(S.PICKQTY) AS QTY \n" +
			",SUM(ISNULL(S.PICKQTY,0)*ISNULL(S.UNITPRICE,0)) AS TOTAL_PRICE,S.CNAME AS CUSTOMERNAME,((SUM(\n" +
			"ISNULL(S.PICKQTY,0)*ISNULL(S.UNITPRICE,0))/100)*(CASE WHEN ISNULL(DONO,'') = '' THEN (CASE WHEN \n" +
			"(SELECT COUNT(PLANT) FROM ##plant##FININVOICEHDR AS I WHERE I.GINO = S.INVOICENO) > 0 THEN\n" +
			"(CASE WHEN (SELECT ISNULL(T.ISZERO,1) FROM FINCOUNTRYTAXTYPE AS T WHERE T.ID IN (SELECT TOP 1 ISNULL(I.TAXID,0)  FROM \n" +
			"##plant##FININVOICEHDR AS I WHERE I.GINO = S.INVOICENO)) > 0 THEN 0 ELSE (SELECT TOP 1 ISNULL(I.OUTBOUD_GST,0) FROM \n" +
			"##plant##FININVOICEHDR AS I WHERE I.GINO = S.INVOICENO) END) ELSE 0 END) ELSE (CASE WHEN\n" +
			"(SELECT ISNULL(D.TAXID,0) FROM ##plant##DOHDR AS D WHERE D.DONO=S.DONO) > 0 THEN\n" +
			"(CASE WHEN (SELECT ISNULL(T.ISZERO,1) FROM FINCOUNTRYTAXTYPE AS T WHERE T.ID IN (SELECT ISNULL(D.TAXID,0) \n" +
			"FROM ##plant##DOHDR AS D WHERE D.DONO=S.DONO)) > 0 THEN 0 ELSE (SELECT TOP 1 ISNULL(D.OUTBOUND_GST,0) FROM \n" +
			"##plant##DOHDR AS D WHERE D.DONO=S.DONO) END) ELSE 0 END) END)) AS TAX FROM ##plant##SHIPHIS AS S WHERE \n" +
			"CONVERT(DATETIME,S.ISSUEDATE, 104) between  CONVERT(DATETIME, :pk0, 104) and  CONVERT(DATETIME, :pk1, 104)\n" +
			"GROUP BY S.ITEM,S.ITEMDESC,S.DONO,S.INVOICENO,S.CNAME) AS A  \n" +
			"WHERE ISNULL(A.CUSTOMERNAME,'') != '' AND ISNULL(A.CUSTOMERNAME,'') = :pk2 GROUP BY A.ITEM,A.ITEMDESC,A.CUSTOMERNAME",nativeQuery = true)
	List<SalesSummaryWithTax> getSalesDetailWithTax(String pk0, String pk1, String pk2);

	@Query(value="SELECT ISNULL(SUM(B.PRICE),0) AS TOTAL_SUBTOATAL FROM \n" +
			"( SELECT A.CUSTOMERNAME,A.ITEM,A.ITEMDESC,SUM(A.QTY) AS QTY,SUM(A.TOTAL_PRICE) AS \n" +
			"PRICE,SUM(A.TAX) AS TAX_AMOUNT, (SUM(A.TOTAL_PRICE)+SUM(A.TAX)) AS TOTAL_PRICE FROM \n" +
			"(SELECT S.ITEM,S.ITEMDESC,SUM(S.PICKQTY) AS QTY \n" +
			",SUM(ISNULL(S.PICKQTY,0)*ISNULL(S.UNITPRICE,0)) AS TOTAL_PRICE,S.CNAME AS CUSTOMERNAME,((SUM(\n" +
			"ISNULL(S.PICKQTY,0)*ISNULL(S.UNITPRICE,0))/100)*(CASE WHEN ISNULL(DONO,'') = '' THEN (CASE WHEN \n" +
			"(SELECT COUNT(PLANT) FROM ##plant##FININVOICEHDR AS I WHERE I.GINO = S.INVOICENO) > 0 THEN\n" +
			"(CASE WHEN (SELECT ISNULL(T.ISZERO,1) FROM FINCOUNTRYTAXTYPE AS T WHERE T.ID IN (SELECT TOP 1 ISNULL(I.TAXID,0)  FROM \n" +
			"##plant##FININVOICEHDR AS I WHERE I.GINO = S.INVOICENO)) > 0 THEN 0 ELSE (SELECT TOP 1 ISNULL(I.OUTBOUD_GST,0) FROM \n" +
			"##plant##FININVOICEHDR AS I WHERE I.GINO = S.INVOICENO) END) ELSE 0 END) ELSE (CASE WHEN\n" +
			"(SELECT ISNULL(D.TAXID,0) FROM ##plant##DOHDR AS D WHERE D.DONO=S.DONO) > 0 THEN\n" +
			"(CASE WHEN (SELECT ISNULL(T.ISZERO,1) FROM FINCOUNTRYTAXTYPE AS T WHERE T.ID IN (SELECT ISNULL(D.TAXID,0) \n" +
			"FROM ##plant##DOHDR AS D WHERE D.DONO=S.DONO)) > 0 THEN 0 ELSE (SELECT TOP 1 ISNULL(D.OUTBOUND_GST,0) FROM \n" +
			"##plant##DOHDR AS D WHERE D.DONO=S.DONO) END) ELSE 0 END) END)) AS TAX FROM ##plant##SHIPHIS AS S WHERE \n" +
			"CONVERT(DATETIME,S.ISSUEDATE, 104) between  CONVERT(DATETIME, :pk0, 104) and  CONVERT(DATETIME, :pk1, 104)\n" +
			"GROUP BY S.ITEM,S.ITEMDESC,S.DONO,S.INVOICENO,S.CNAME) AS A  \n" +
			"WHERE ISNULL(A.CUSTOMERNAME,'') != '' AND ISNULL(A.CUSTOMERNAME,'') = :pk2 GROUP BY A.ITEM,A.ITEMDESC,A.CUSTOMERNAME) AS B",nativeQuery = true)
	String getTotalSalesSubTotalWithTax(String pk0, String pk1, String pk2);

	@Query(value="SELECT ISNULL(SUM(B.TAX_AMOUNT),0) AS TOTAL_TAX FROM \n" +
			"( SELECT A.CUSTOMERNAME,A.ITEM,A.ITEMDESC,SUM(A.QTY) AS QTY,SUM(A.TOTAL_PRICE) AS \n" +
			"PRICE,SUM(A.TAX) AS TAX_AMOUNT, (SUM(A.TOTAL_PRICE)+SUM(A.TAX)) AS TOTAL_PRICE FROM \n" +
			"(SELECT S.ITEM,S.ITEMDESC,SUM(S.PICKQTY) AS QTY \n" +
			",SUM(ISNULL(S.PICKQTY,0)*ISNULL(S.UNITPRICE,0)) AS TOTAL_PRICE,S.CNAME AS CUSTOMERNAME,((SUM(\n" +
			"ISNULL(S.PICKQTY,0)*ISNULL(S.UNITPRICE,0))/100)*(CASE WHEN ISNULL(DONO,'') = '' THEN (CASE WHEN \n" +
			"(SELECT COUNT(PLANT) FROM ##plant##FININVOICEHDR AS I WHERE I.GINO = S.INVOICENO) > 0 THEN\n" +
			"(CASE WHEN (SELECT ISNULL(T.ISZERO,1) FROM FINCOUNTRYTAXTYPE AS T WHERE T.ID IN (SELECT TOP 1 ISNULL(I.TAXID,0)  FROM \n" +
			"##plant##FININVOICEHDR AS I WHERE I.GINO = S.INVOICENO)) > 0 THEN 0 ELSE (SELECT TOP 1 ISNULL(I.OUTBOUD_GST,0) FROM \n" +
			"##plant##FININVOICEHDR AS I WHERE I.GINO = S.INVOICENO) END) ELSE 0 END) ELSE (CASE WHEN\n" +
			"(SELECT ISNULL(D.TAXID,0) FROM ##plant##DOHDR AS D WHERE D.DONO=S.DONO) > 0 THEN\n" +
			"(CASE WHEN (SELECT ISNULL(T.ISZERO,1) FROM FINCOUNTRYTAXTYPE AS T WHERE T.ID IN (SELECT ISNULL(D.TAXID,0) \n" +
			"FROM ##plant##DOHDR AS D WHERE D.DONO=S.DONO)) > 0 THEN 0 ELSE (SELECT TOP 1 ISNULL(D.OUTBOUND_GST,0) FROM \n" +
			"##plant##DOHDR AS D WHERE D.DONO=S.DONO) END) ELSE 0 END) END)) AS TAX FROM ##plant##SHIPHIS AS S WHERE \n" +
			"CONVERT(DATETIME,S.ISSUEDATE, 104) between  CONVERT(DATETIME, :pk0, 104) and  CONVERT(DATETIME, :pk1, 104)\n" +
			"GROUP BY S.ITEM,S.ITEMDESC,S.DONO,S.INVOICENO,S.CNAME) AS A  \n" +
			"WHERE ISNULL(A.CUSTOMERNAME,'') != '' AND ISNULL(A.CUSTOMERNAME,'') = :pk2 GROUP BY A.ITEM,A.ITEMDESC,A.CUSTOMERNAME) AS B",nativeQuery = true)
	String getTotalSalesTaxTotalWithTax(String pk0, String pk1, String pk2);

	@Query(value="SELECT A.ITEM AS item,SUM(A.PICKQTY) AS qty,SUM(A.PICKQTY*A.UNITPRICE) AS unitPrice FROM " +
			"##plant##SHIPHIS AS A LEFT JOIN ##plant##DOHDR AS B ON A.DONO = B.DONO  WHERE CONVERT(DATETIME, A.ISSUEDATE, 104) between  CONVERT(DATETIME, :pk0, 104) " +
			"and  CONVERT(DATETIME, :pk1, 104) and ISNULL(A.TRAN_TYPE,'') != 'KITTING' and " +
			"ISNULL(A.TRAN_TYPE,'') != 'DE-KITTING' and ISNULL(A.CNAME,'') != '' AND B.ORDERTYPE = 'POS'" +
			"GROUP BY ITEM",nativeQuery = true)
	List<ItemQtyPrice> findByItemQtyWithOutKitAndDkitpos(String pk0, String pk1);

	@Query(value="SELECT A.ITEM AS item,SUM(A.PICKQTY) AS qty,SUM(A.PICKQTY*A.UNITPRICE) AS unitPrice FROM " +
			"##plant##SHIPHIS AS A LEFT JOIN ##plant##DOHDR AS B ON A.DONO = B.DONO  WHERE CONVERT(DATETIME, A.ISSUEDATE, 104) " +
			"between  CONVERT(DATETIME, :pk0, 104) and  CONVERT(DATETIME, :pk1, 104)  AND B.ORDERTYPE = 'POS' AND " +
			"B.TERMINAL = :pk2 GROUP BY ITEM",nativeQuery = true)
	List<ItemQtyPrice> getItemQtyByterminalIdpos(String pk0, String pk1, String pk2);

	@Query(value="SELECT A.ITEM AS item,SUM(A.PICKQTY) AS qty,SUM(A.PICKQTY*A.UNITPRICE) AS unitPrice FROM " +
			"##plant##SHIPHIS AS A LEFT JOIN ##plant##DOHDR AS B ON A.DONO = B.DONO  WHERE CONVERT(DATETIME, A.ISSUEDATE, 104) " +
			"between  CONVERT(DATETIME, :pk0, 104) and  CONVERT(DATETIME, :pk1, 104)  AND B.ORDERTYPE = 'POS' AND " +
			"B.OUTLET = :pk2 GROUP BY ITEM",nativeQuery = true)
	List<ItemQtyPrice> getItemQtyByOutletIdpos(String pk0, String pk1, String pk2);

	@Query(value="SELECT A.ITEM AS item,SUM(A.PICKQTY) AS qty,SUM(A.PICKQTY*A.UNITPRICE) AS unitPrice FROM " +
			"##plant##SHIPHIS AS A LEFT JOIN ##plant##DOHDR AS B ON A.DONO = B.DONO  WHERE CONVERT(DATETIME, A.ISSUEDATE, 104) " +
			"between  CONVERT(DATETIME, :pk0, 104) and  CONVERT(DATETIME, :pk1, 104)  AND B.ORDERTYPE = 'POS' AND " +
			"B.OUTLET = :pk2 AND B.TERMINAL = :pk3 GROUP BY ITEM",nativeQuery = true)
	List<ItemQtyPrice> getItemQtyByOutletterminalIdpos(String pk0, String pk1, String pk2,String pk3);

	@Query(value="SELECT A.ITEM AS item,SUM(A.PICKQTY) AS qty,SUM(A.PICKQTY*A.UNITPRICE) AS unitPrice FROM " +
			"##plant##SHIPHIS AS A LEFT JOIN ##plant##DOHDR AS B ON A.DONO = B.DONO  WHERE CONVERT(DATETIME, A.ISSUEDATE, 104) between  CONVERT(DATETIME, :pk0, 104) " +
			"and  CONVERT(DATETIME, :pk1, 104) and ISNULL(A.TRAN_TYPE,'') != 'KITTING' and " +
			"ISNULL(A.TRAN_TYPE,'') != 'DE-KITTING' and ISNULL(A.CNAME,'') != '' AND B.ORDERTYPE != 'POS'" +
			"GROUP BY ITEM",nativeQuery = true)
	List<ItemQtyPrice> findByItemQtyWithOutKitAndDkiterp(String pk0, String pk1);

	@Query(value="SELECT A.ITEM AS item,SUM(A.PICKQTY) AS qty,SUM(A.PICKQTY*A.UNITPRICE) AS unitPrice FROM " +
			"##plant##SHIPHIS AS A LEFT JOIN ##plant##DOHDR AS B ON A.DONO = B.DONO  WHERE CONVERT(DATETIME, A.ISSUEDATE, 104) " +
			"between  CONVERT(DATETIME, :pk0, 104) and  CONVERT(DATETIME, :pk1, 104)  AND B.ORDERTYPE != 'POS' AND " +
			"A.CNAME LIKE %:pk2% GROUP BY ITEM",nativeQuery = true)
	List<ItemQtyPrice> findByItemQtyByCustIderp(String pk0, String pk1, String pk2);
}
